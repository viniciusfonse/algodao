{"title":"Análises exploratórias dos dados do experimento","markdown":{"yaml":{"title":"Análises exploratórias dos dados do experimento","author":"Antônia Karine Fernandes, José Neto Rodrigues e Vinícius Fonsêca","format":"html","editor":"visual"},"headingText":"Pacotes usados","containsRefs":false,"markdown":"\n\n\n```{r}\nlibrary(agridat) #pacote em que está armazendado o banco de dados que será utilizado\nlibrary(openxlsx) #salvando o banco de dados\nlibrary(DT) #cria tabelas interativas\nlibrary(tidyverse)\nlibrary(skimr)\nlibrary(dplyr)\nlibrary(tidyverse)\nlibrary(gganimate)\n```\n\n# Análises\n\n## Carregando do banco de dados\n\n```{r}\ndata(silva.cotton)\ndat <- silva.cotton\nView(dat)\n\nwrite.xlsx(dat, file = \"dat.xlsx\")\n\ndatatable(dat) #Cria a tabela interativa no arquivo HTML\n```\n\n## Análises exploratórias\n\n### Estrutura geral dos dados\n\nVisualização geral da estrutura dos dados\n\n```{r}\nstr(dat)\nsummary(dat)\nskimr::skim(dat)\n```\n\n### Histograma de frequências\n\nUsaremos o pacote *tidyverse* (que inclui o *ggplot2*) para visualização de cada variável resposta por meio dos histogramas de frequência\n\n```{r}\ndat_long <- dat |> \n  pivot_longer(cols = c(height, nodes, reproductive, bolls, weight),\n               names_to = \"variavel_resposta\",\n               values_to = \"valor\") #reorganizando os dados para formato longo\n\n# Histogramas + densidade\nggplot(dat_long, aes(x = valor)) +\n  geom_histogram(aes(y = ..density..), bins = 30, fill = \"lightblue\", color = \"gray30\") +\n  geom_density(color = \"red\") +\n  facet_wrap(~variavel_resposta, scales = \"free\", ncol = 2) +\n  theme_minimal() +\n  labs(title = \"Distribuição das variáveis resposta\", x = NULL, y = \"Densidade\")\n```\n\n### Gráficos BoxPlot\n\nEm seguida, construimos gráficos do tipo boxplot para entender como a desfolha afeta cada variável. As variáveis resposta estarão em função da desfolha, facetando por estágio de desenvolvimento.\n\n```{r}\ndat |> \n  ggplot(aes(x = as.factor(defoliation), y = height)) +\n  geom_boxplot(outlier.colour = NA) + \n  geom_jitter(width = 0.1, color = \"gray20\") +\n  theme_grey() + \n  labs(x = \"Defoliation\",\n       y = \"Plant height\") +\n  facet_wrap(~ stage)\n```\n\nPercebemos que, ao invés de criar um gráfico para cada variável resposta, é mais viável criarmos um gráfico em que cada linha representa uma variável resposta, e cada coluna representa um estágio de desenvolvimento\n\n```{r}\ndat_long <- dat |> \n  pivot_longer(cols = c(height, nodes, reproductive, bolls, weight),\n               names_to = \"variavel_resposta\",\n               values_to = \"valor\") #reorganizando os dados para formato longo\n\n# Gráfico boxplot\ndat_long |> \n  ggplot(aes(x = as.factor(defoliation), y = valor)) +\n  geom_boxplot(outlier.colour = NA) +\n  geom_jitter(width = 0.1, color = \"gray20\", alpha = 0.6) +\n  theme_grey() +\n  labs(x = \"Defoliation\", y = NULL) +\n  facet_grid(rows = vars(variavel_resposta), cols = vars(stage), scales = \"free_y\") +\n  theme(strip.text = element_text(face = \"bold\"))\n```\n\n### Linhas de tendência\n\nAgora, plotaremos os gráficos de linhas para cada variável análisada para verificar a tendência dos dados.\n\nPeso médio das maçãs\n\n```{r}\n# Filtrar apenas linhas com valores válidos de 'weight'\ndados_validos <- dat %>%\n  filter(!is.na(weight)) \n\n#head(dados_validos)\n#str(dados_validos)\n#colnames(dados_validos)\ndados_validos %>%\n  group_by(stage, defoliation)\n\n# Calcular média e erro padrão por stage x defoliation\ndados_summary2 <- dados_validos %>%\n  group_by(stage, defoliation) %>%\n  summarise(\n    mean_weight = mean(weight, na.rm = TRUE),\n    sd_weight = sd(weight, na.rm = TRUE),\n    n = n(),\n    se_weight = sd_weight / sqrt(n)\n  ) %>%\n  ungroup()\n\n# Garantir que defoliation é numérico (caso tenha vindo como string)\ndados_summary2$defoliation <- as.numeric(as.character(dados_summary2$defoliation))\n\n# Plotar o gráfico\nggplot(dados_summary2, aes(x = defoliation, y = mean_weight, color = stage, group = stage)) +\n  geom_line(size = 1) +\n  geom_point(size = 2) +\n  geom_errorbar(aes(ymin = mean_weight - se_weight, ymax = mean_weight + se_weight), width = 5) +\n  labs(\n    title = \"Peso médio das estruturas reprodutivas por estádio e desfolha\",\n    x = \"Desfolha (%)\",\n    y = \"Peso médio (g)\",\n    color = \"Estádio\"\n  ) +\n  theme_gray() +\n  theme(plot.title = element_text(hjust = 0.5))\n```\n\nGráfico dinâmico\n\n```{r}\n#| warning: false\n#| message: false\n\n# Gráfico base com ajustes de group\ngif <- ggplot(dados_summary2, aes(x = defoliation, y = mean_weight, color = stage, group = stage)) +\n  geom_line(aes(group = stage), size = 1) +\n  geom_point(aes(group = stage), size = 2) +\n  geom_errorbar(aes(ymin = mean_weight - se_weight, ymax = mean_weight + se_weight), width = 5) +\n  labs(\n    title = \"Peso médio das estruturas reprodutivas por estádio e desfolha\",\n    x = \"Desfolha (%)\",\n    y = \"Peso médio (g)\",\n    color = \"Estádio\"\n  ) +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5))\n\n# Animação com transition_reveal\ngif_sev <- gif + transition_reveal(along = defoliation)\n\n# Animação com renderer gifski (mais estável)\nanimated_gif <- animate(gif_sev, renderer = gifski_renderer())\nanimated_gif\n\n# Salvar o GIF\nanim_save(\"imgs/gif_sev.gif\", animation = animated_gif)\n```\n\nNúmero de estruturas reprodutivas\n\n```{r}\n# Calcular média e erro padrão por stage x defoliation para 'reproductive'\ndados_summary <- dat %>%\n  group_by(stage, defoliation) %>%\n  summarise(\n    mean_reproductive = mean(reproductive),\n    sd_reproductive = sd(reproductive),\n    n = n(),\n    se_reproductive = sd_reproductive / sqrt(n)\n  ) %>%\n  ungroup()\n\n# Garantir que defoliation é numérico (caso venha como fator/character)\ndados_summary$defoliation <- as.numeric(as.character(dados_summary$defoliation))\n\n# Plotar gráfico para 'reproductive'\nggplot(dados_summary, aes(x = defoliation, y = mean_reproductive, color = stage, group = stage)) +\n  geom_line(size = 1) +\n  geom_point(size = 2) +\n  geom_errorbar(aes(ymin = mean_reproductive - se_reproductive, ymax = mean_reproductive + se_reproductive), width = 5) +\n  labs(\n    title = \"Número médio de estruturas reprodutivas por estádio e desfolha\",\n    x = \"Desfolha (%)\",\n    y = \"Número médio de estruturas reprodutivas\",\n    color = \"Estádio\"\n  ) +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5))\n```\n\nGráfico dinâmico\n\n```{r}\n#| warning: false\n#| message: false\n\n# Gráfico base com ajustes de group\ngif <- ggplot(dados_summary, aes(x = defoliation, y = mean_reproductive, color = stage, group = stage)) +\n  geom_line(aes(group = stage), size = 1) +\n  geom_point(aes(group = stage), size = 2) +\n  geom_errorbar(aes(ymin = mean_reproductive - se_reproductive, ymax = mean_reproductive + se_reproductive), width = 5) +\n  labs(\n    title = \"Número médio de estruturas reprodutivas por estádio e desfolha\",\n    x = \"Desfolha (%)\",\n    y = \"Número médio de estruturas reprodutivas\",\n    color = \"Estádio\"\n  ) +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5))\n\n# Animação com transition_reveal\ngif_rep <- gif + transition_reveal(along = defoliation)\n\n# Animação com renderer gifski (mais estável)\nanimated_gif2 <- animate(gif_rep, renderer = gifski_renderer())\nanimated_gif2\n\n# Salvar o GIF\nanim_save(\"imgs/gif_rep.gif\", animation = animated_gif2)\n```\n\nNúmero de maçãs\n\n```{r}\n# Calcular média e erro padrão por stage x defoliation para 'bolls'\ndados_summary <- dat %>%\n  group_by(stage, defoliation) %>%\n  summarise(\n    mean_bolls = mean(bolls),\n    sd_bolls = sd(bolls),\n    n = n(),\n    se_bolls = sd_bolls / sqrt(n)\n  ) %>%\n  ungroup()\n\n# Garantir que defoliation é numérico (caso venha como fator/character)\ndados_summary$defoliation <- as.numeric(as.character(dados_summary$defoliation))\n\n# Plotar gráfico para 'bolls'\nggplot(dados_summary, aes(x = defoliation, y = mean_bolls, color = stage, group = stage)) +\n  geom_line(size = 1) +\n  geom_point(size = 2) +\n  geom_errorbar(aes(ymin = mean_bolls - se_bolls, ymax = mean_bolls + se_bolls), width = 5) +\n  labs(\n    title = \"Número médio de maçãs por estádio e desfolha\",\n    x = \"Desfolha (%)\",\n    y = \"Número médio de maçãs\",\n    color = \"Estádio\"\n  ) +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5))\n```\n\nGráfico dinâmico\n\n```{r}\n#| warning: false\n#| message: false\n\n# Gráfico base com ajustes de group\ngif <- ggplot(dados_summary, aes(x = defoliation, y = mean_bolls, color = stage, group = stage)) +\n  geom_line(aes(group = stage), size = 1) +\n  geom_point(aes(group = stage), size = 2) +\n  geom_errorbar(aes(ymin = mean_bolls - se_bolls, ymax = mean_bolls + se_bolls), width = 5) +\n  labs(\n    title = \"Número médio de maçãs por estádio e desfolha\",\n    x = \"Desfolha (%)\",\n    y = \"Número médio de maçãs\",\n    color = \"Estádio\"\n  ) +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5))\n\n# Animação com transition_reveal\ngif_bolls <- gif + transition_reveal(along = defoliation)\n\n# Animação com renderer gifski (mais estável)\nanimated_gif3 <- animate(gif_bolls, renderer = gifski_renderer())\nanimated_gif3\n\n# Salvar o GIF\nanim_save(\"imgs/gif_bolls.gif\", animation = animated_gif3)\n```\n\nAltura da planta\n\n```{r}\n# Calcular média e erro padrão por stage x defoliation para 'height'\ndados_summary <- dat %>%\n  group_by(stage, defoliation) %>%\n  summarise(\n    mean_height = mean(height),\n    sd_height = sd(height),\n    n = n(),\n    se_height = sd_height / sqrt(n)\n  ) %>%\n  ungroup()\n\n# Garantir que defoliation é numérico (caso venha como fator/character)\ndados_summary$defoliation <- as.numeric(as.character(dados_summary$defoliation))\n\n# Plotar gráfico para 'height'\nggplot(dados_summary, aes(x = defoliation, y = mean_height, color = stage, group = stage)) +\n  geom_line(size = 1) +\n  geom_point(size = 2) +\n  geom_errorbar(aes(ymin = mean_height - se_height, ymax = mean_height + se_height), width = 5) +\n  labs(\n    title = \"Altura média das plantas por estádio e desfolha\",\n    x = \"Desfolha (%)\",\n    y = \"Altura média (cm)\",\n    color = \"Estádio\"\n  ) +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5))\n```\n\nGráfico dinâmico\n\n```{r}\n#| warning: false\n#| message: false\n\n# Gráfico base com ajustes de group\ngif <- ggplot(dados_summary, aes(x = defoliation, y = mean_height, color = stage, group = stage)) +\n  geom_line(aes(group = stage), size = 1) +\n  geom_point(aes(group = stage), size = 2) +\n  geom_errorbar(aes(ymin = mean_height - se_height, ymax = mean_height + se_height), width = 5) +\n  labs(\n    title = \"Altura média das plantas por estádio e desfolha\",\n    x = \"Desfolha (%)\",\n    y = \"Altura média (cm)\",\n    color = \"Estádio\"\n  ) +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5))\n\n# Animação com transition_reveal\ngif_hei <- gif + transition_reveal(along = defoliation)\n\n# Animação com renderer gifski (mais estável)\nanimated_gif4 <- animate(gif_hei, renderer = gifski_renderer())\nanimated_gif4\n\n# Salvar o GIF\nanim_save(\"imgs/gif_height.gif\", animation = animated_gif4)\n```\n\nNúmero de nós\n\n```{r}\n# Calcular média e erro padrão por stage x defoliation para 'nodes'\ndados_summary <- dat %>%\n  group_by(stage, defoliation) %>%\n  summarise(\n    mean_nodes = mean(nodes),\n    sd_nodes = sd(nodes),\n    n = n(),\n    se_nodes = sd_nodes / sqrt(n)\n  ) %>%\n  ungroup()\n\n# Garantir que defoliation é numérico (caso venha como fator/character)\ndados_summary$defoliation <- as.numeric(as.character(dados_summary$defoliation))\n\n# Plotar gráfico para 'nodes'\nggplot(dados_summary, aes(x = defoliation, y = mean_nodes, color = stage, group = stage)) +\n  geom_line(size = 1) +\n  geom_point(size = 2) +\n  geom_errorbar(aes(ymin = mean_nodes - se_nodes, ymax = mean_nodes + se_nodes), width = 5) +\n  labs(\n    title = \"Número médio de nós por estádio e desfolha\",\n    x = \"Desfolha (%)\",\n    y = \"Número médio de nós\",\n    color = \"Estádio\"\n  ) +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5))\n```\n\nGráfico dinâmico\n\n```{r}\n#| warning: false\n#| message: false\n\n# Gráfico base com ajustes de group\ngif <- ggplot(dados_summary, aes(x = defoliation, y = mean_nodes, color = stage, group = stage)) +\n  geom_line(aes(group = stage), size = 1) +\n  geom_point(aes(group = stage), size = 2) +\n  geom_errorbar(aes(ymin = mean_nodes - se_nodes, ymax = mean_nodes + se_nodes), width = 5) +\n  labs(\n    title = \"Número médio de nós por estádio e desfolha\",\n    x = \"Desfolha (%)\",\n    y = \"Número médio de nós\",\n    color = \"Estádio\"\n  ) +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5))\n\n# Animação com transition_reveal\ngif_nodes <- gif + transition_reveal(along = defoliation)\n\n# Animação com renderer gifski (mais estável)\nanimated_gif5 <- animate(gif_nodes, renderer = gifski_renderer())\nanimated_gif5\n\n# Salvar o GIF\nanim_save(\"imgs/gif_nodes.gif\", animation = animated_gif5)\n```\n\n### Gráfico de tendências individuais\n\n```{r}\n# Convertendo as variáveis categóricas\ndat$stage <- as.factor(dat$stage)\ndat$defoliation <- as.factor(dat$defoliation)\n\ndat_long <- dat |>\n  pivot_longer(cols = c(height, nodes, reproductive, bolls, weight),\n               names_to = \"variavel_resposta\", \n               values_to = \"valor\") #reorganizando os dados para formato longo\n\n# Gráfico: número de capulhos por nível de desfolha, colorido por estádio\nggplot(dat_long, aes(x = defoliation, y = valor)) +\n  geom_jitter(position = position_jitter(width = 0.1), size = 2, alpha = 0.8) +\n  \n  # Linha de tendência ligando as médias por estádio\n  stat_summary(fun = mean, geom = \"line\", aes(group = 1), color = \"red\", size = 0.75) +\n  \n  # Pontos de média\n  stat_summary(fun = mean, geom = \"point\", shape = 18, size = 4, color = \"red\") +\n  \n  labs(title = NULL,\n       x = \"Nível de desfolha\", y = NULL) +\n  \n  facet_grid(rows = vars(variavel_resposta), cols = vars(stage), scales = \"free_y\") +\n  theme_gray()\n```\n","srcMarkdownNoYaml":"\n\n# Pacotes usados\n\n```{r}\nlibrary(agridat) #pacote em que está armazendado o banco de dados que será utilizado\nlibrary(openxlsx) #salvando o banco de dados\nlibrary(DT) #cria tabelas interativas\nlibrary(tidyverse)\nlibrary(skimr)\nlibrary(dplyr)\nlibrary(tidyverse)\nlibrary(gganimate)\n```\n\n# Análises\n\n## Carregando do banco de dados\n\n```{r}\ndata(silva.cotton)\ndat <- silva.cotton\nView(dat)\n\nwrite.xlsx(dat, file = \"dat.xlsx\")\n\ndatatable(dat) #Cria a tabela interativa no arquivo HTML\n```\n\n## Análises exploratórias\n\n### Estrutura geral dos dados\n\nVisualização geral da estrutura dos dados\n\n```{r}\nstr(dat)\nsummary(dat)\nskimr::skim(dat)\n```\n\n### Histograma de frequências\n\nUsaremos o pacote *tidyverse* (que inclui o *ggplot2*) para visualização de cada variável resposta por meio dos histogramas de frequência\n\n```{r}\ndat_long <- dat |> \n  pivot_longer(cols = c(height, nodes, reproductive, bolls, weight),\n               names_to = \"variavel_resposta\",\n               values_to = \"valor\") #reorganizando os dados para formato longo\n\n# Histogramas + densidade\nggplot(dat_long, aes(x = valor)) +\n  geom_histogram(aes(y = ..density..), bins = 30, fill = \"lightblue\", color = \"gray30\") +\n  geom_density(color = \"red\") +\n  facet_wrap(~variavel_resposta, scales = \"free\", ncol = 2) +\n  theme_minimal() +\n  labs(title = \"Distribuição das variáveis resposta\", x = NULL, y = \"Densidade\")\n```\n\n### Gráficos BoxPlot\n\nEm seguida, construimos gráficos do tipo boxplot para entender como a desfolha afeta cada variável. As variáveis resposta estarão em função da desfolha, facetando por estágio de desenvolvimento.\n\n```{r}\ndat |> \n  ggplot(aes(x = as.factor(defoliation), y = height)) +\n  geom_boxplot(outlier.colour = NA) + \n  geom_jitter(width = 0.1, color = \"gray20\") +\n  theme_grey() + \n  labs(x = \"Defoliation\",\n       y = \"Plant height\") +\n  facet_wrap(~ stage)\n```\n\nPercebemos que, ao invés de criar um gráfico para cada variável resposta, é mais viável criarmos um gráfico em que cada linha representa uma variável resposta, e cada coluna representa um estágio de desenvolvimento\n\n```{r}\ndat_long <- dat |> \n  pivot_longer(cols = c(height, nodes, reproductive, bolls, weight),\n               names_to = \"variavel_resposta\",\n               values_to = \"valor\") #reorganizando os dados para formato longo\n\n# Gráfico boxplot\ndat_long |> \n  ggplot(aes(x = as.factor(defoliation), y = valor)) +\n  geom_boxplot(outlier.colour = NA) +\n  geom_jitter(width = 0.1, color = \"gray20\", alpha = 0.6) +\n  theme_grey() +\n  labs(x = \"Defoliation\", y = NULL) +\n  facet_grid(rows = vars(variavel_resposta), cols = vars(stage), scales = \"free_y\") +\n  theme(strip.text = element_text(face = \"bold\"))\n```\n\n### Linhas de tendência\n\nAgora, plotaremos os gráficos de linhas para cada variável análisada para verificar a tendência dos dados.\n\nPeso médio das maçãs\n\n```{r}\n# Filtrar apenas linhas com valores válidos de 'weight'\ndados_validos <- dat %>%\n  filter(!is.na(weight)) \n\n#head(dados_validos)\n#str(dados_validos)\n#colnames(dados_validos)\ndados_validos %>%\n  group_by(stage, defoliation)\n\n# Calcular média e erro padrão por stage x defoliation\ndados_summary2 <- dados_validos %>%\n  group_by(stage, defoliation) %>%\n  summarise(\n    mean_weight = mean(weight, na.rm = TRUE),\n    sd_weight = sd(weight, na.rm = TRUE),\n    n = n(),\n    se_weight = sd_weight / sqrt(n)\n  ) %>%\n  ungroup()\n\n# Garantir que defoliation é numérico (caso tenha vindo como string)\ndados_summary2$defoliation <- as.numeric(as.character(dados_summary2$defoliation))\n\n# Plotar o gráfico\nggplot(dados_summary2, aes(x = defoliation, y = mean_weight, color = stage, group = stage)) +\n  geom_line(size = 1) +\n  geom_point(size = 2) +\n  geom_errorbar(aes(ymin = mean_weight - se_weight, ymax = mean_weight + se_weight), width = 5) +\n  labs(\n    title = \"Peso médio das estruturas reprodutivas por estádio e desfolha\",\n    x = \"Desfolha (%)\",\n    y = \"Peso médio (g)\",\n    color = \"Estádio\"\n  ) +\n  theme_gray() +\n  theme(plot.title = element_text(hjust = 0.5))\n```\n\nGráfico dinâmico\n\n```{r}\n#| warning: false\n#| message: false\n\n# Gráfico base com ajustes de group\ngif <- ggplot(dados_summary2, aes(x = defoliation, y = mean_weight, color = stage, group = stage)) +\n  geom_line(aes(group = stage), size = 1) +\n  geom_point(aes(group = stage), size = 2) +\n  geom_errorbar(aes(ymin = mean_weight - se_weight, ymax = mean_weight + se_weight), width = 5) +\n  labs(\n    title = \"Peso médio das estruturas reprodutivas por estádio e desfolha\",\n    x = \"Desfolha (%)\",\n    y = \"Peso médio (g)\",\n    color = \"Estádio\"\n  ) +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5))\n\n# Animação com transition_reveal\ngif_sev <- gif + transition_reveal(along = defoliation)\n\n# Animação com renderer gifski (mais estável)\nanimated_gif <- animate(gif_sev, renderer = gifski_renderer())\nanimated_gif\n\n# Salvar o GIF\nanim_save(\"imgs/gif_sev.gif\", animation = animated_gif)\n```\n\nNúmero de estruturas reprodutivas\n\n```{r}\n# Calcular média e erro padrão por stage x defoliation para 'reproductive'\ndados_summary <- dat %>%\n  group_by(stage, defoliation) %>%\n  summarise(\n    mean_reproductive = mean(reproductive),\n    sd_reproductive = sd(reproductive),\n    n = n(),\n    se_reproductive = sd_reproductive / sqrt(n)\n  ) %>%\n  ungroup()\n\n# Garantir que defoliation é numérico (caso venha como fator/character)\ndados_summary$defoliation <- as.numeric(as.character(dados_summary$defoliation))\n\n# Plotar gráfico para 'reproductive'\nggplot(dados_summary, aes(x = defoliation, y = mean_reproductive, color = stage, group = stage)) +\n  geom_line(size = 1) +\n  geom_point(size = 2) +\n  geom_errorbar(aes(ymin = mean_reproductive - se_reproductive, ymax = mean_reproductive + se_reproductive), width = 5) +\n  labs(\n    title = \"Número médio de estruturas reprodutivas por estádio e desfolha\",\n    x = \"Desfolha (%)\",\n    y = \"Número médio de estruturas reprodutivas\",\n    color = \"Estádio\"\n  ) +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5))\n```\n\nGráfico dinâmico\n\n```{r}\n#| warning: false\n#| message: false\n\n# Gráfico base com ajustes de group\ngif <- ggplot(dados_summary, aes(x = defoliation, y = mean_reproductive, color = stage, group = stage)) +\n  geom_line(aes(group = stage), size = 1) +\n  geom_point(aes(group = stage), size = 2) +\n  geom_errorbar(aes(ymin = mean_reproductive - se_reproductive, ymax = mean_reproductive + se_reproductive), width = 5) +\n  labs(\n    title = \"Número médio de estruturas reprodutivas por estádio e desfolha\",\n    x = \"Desfolha (%)\",\n    y = \"Número médio de estruturas reprodutivas\",\n    color = \"Estádio\"\n  ) +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5))\n\n# Animação com transition_reveal\ngif_rep <- gif + transition_reveal(along = defoliation)\n\n# Animação com renderer gifski (mais estável)\nanimated_gif2 <- animate(gif_rep, renderer = gifski_renderer())\nanimated_gif2\n\n# Salvar o GIF\nanim_save(\"imgs/gif_rep.gif\", animation = animated_gif2)\n```\n\nNúmero de maçãs\n\n```{r}\n# Calcular média e erro padrão por stage x defoliation para 'bolls'\ndados_summary <- dat %>%\n  group_by(stage, defoliation) %>%\n  summarise(\n    mean_bolls = mean(bolls),\n    sd_bolls = sd(bolls),\n    n = n(),\n    se_bolls = sd_bolls / sqrt(n)\n  ) %>%\n  ungroup()\n\n# Garantir que defoliation é numérico (caso venha como fator/character)\ndados_summary$defoliation <- as.numeric(as.character(dados_summary$defoliation))\n\n# Plotar gráfico para 'bolls'\nggplot(dados_summary, aes(x = defoliation, y = mean_bolls, color = stage, group = stage)) +\n  geom_line(size = 1) +\n  geom_point(size = 2) +\n  geom_errorbar(aes(ymin = mean_bolls - se_bolls, ymax = mean_bolls + se_bolls), width = 5) +\n  labs(\n    title = \"Número médio de maçãs por estádio e desfolha\",\n    x = \"Desfolha (%)\",\n    y = \"Número médio de maçãs\",\n    color = \"Estádio\"\n  ) +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5))\n```\n\nGráfico dinâmico\n\n```{r}\n#| warning: false\n#| message: false\n\n# Gráfico base com ajustes de group\ngif <- ggplot(dados_summary, aes(x = defoliation, y = mean_bolls, color = stage, group = stage)) +\n  geom_line(aes(group = stage), size = 1) +\n  geom_point(aes(group = stage), size = 2) +\n  geom_errorbar(aes(ymin = mean_bolls - se_bolls, ymax = mean_bolls + se_bolls), width = 5) +\n  labs(\n    title = \"Número médio de maçãs por estádio e desfolha\",\n    x = \"Desfolha (%)\",\n    y = \"Número médio de maçãs\",\n    color = \"Estádio\"\n  ) +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5))\n\n# Animação com transition_reveal\ngif_bolls <- gif + transition_reveal(along = defoliation)\n\n# Animação com renderer gifski (mais estável)\nanimated_gif3 <- animate(gif_bolls, renderer = gifski_renderer())\nanimated_gif3\n\n# Salvar o GIF\nanim_save(\"imgs/gif_bolls.gif\", animation = animated_gif3)\n```\n\nAltura da planta\n\n```{r}\n# Calcular média e erro padrão por stage x defoliation para 'height'\ndados_summary <- dat %>%\n  group_by(stage, defoliation) %>%\n  summarise(\n    mean_height = mean(height),\n    sd_height = sd(height),\n    n = n(),\n    se_height = sd_height / sqrt(n)\n  ) %>%\n  ungroup()\n\n# Garantir que defoliation é numérico (caso venha como fator/character)\ndados_summary$defoliation <- as.numeric(as.character(dados_summary$defoliation))\n\n# Plotar gráfico para 'height'\nggplot(dados_summary, aes(x = defoliation, y = mean_height, color = stage, group = stage)) +\n  geom_line(size = 1) +\n  geom_point(size = 2) +\n  geom_errorbar(aes(ymin = mean_height - se_height, ymax = mean_height + se_height), width = 5) +\n  labs(\n    title = \"Altura média das plantas por estádio e desfolha\",\n    x = \"Desfolha (%)\",\n    y = \"Altura média (cm)\",\n    color = \"Estádio\"\n  ) +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5))\n```\n\nGráfico dinâmico\n\n```{r}\n#| warning: false\n#| message: false\n\n# Gráfico base com ajustes de group\ngif <- ggplot(dados_summary, aes(x = defoliation, y = mean_height, color = stage, group = stage)) +\n  geom_line(aes(group = stage), size = 1) +\n  geom_point(aes(group = stage), size = 2) +\n  geom_errorbar(aes(ymin = mean_height - se_height, ymax = mean_height + se_height), width = 5) +\n  labs(\n    title = \"Altura média das plantas por estádio e desfolha\",\n    x = \"Desfolha (%)\",\n    y = \"Altura média (cm)\",\n    color = \"Estádio\"\n  ) +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5))\n\n# Animação com transition_reveal\ngif_hei <- gif + transition_reveal(along = defoliation)\n\n# Animação com renderer gifski (mais estável)\nanimated_gif4 <- animate(gif_hei, renderer = gifski_renderer())\nanimated_gif4\n\n# Salvar o GIF\nanim_save(\"imgs/gif_height.gif\", animation = animated_gif4)\n```\n\nNúmero de nós\n\n```{r}\n# Calcular média e erro padrão por stage x defoliation para 'nodes'\ndados_summary <- dat %>%\n  group_by(stage, defoliation) %>%\n  summarise(\n    mean_nodes = mean(nodes),\n    sd_nodes = sd(nodes),\n    n = n(),\n    se_nodes = sd_nodes / sqrt(n)\n  ) %>%\n  ungroup()\n\n# Garantir que defoliation é numérico (caso venha como fator/character)\ndados_summary$defoliation <- as.numeric(as.character(dados_summary$defoliation))\n\n# Plotar gráfico para 'nodes'\nggplot(dados_summary, aes(x = defoliation, y = mean_nodes, color = stage, group = stage)) +\n  geom_line(size = 1) +\n  geom_point(size = 2) +\n  geom_errorbar(aes(ymin = mean_nodes - se_nodes, ymax = mean_nodes + se_nodes), width = 5) +\n  labs(\n    title = \"Número médio de nós por estádio e desfolha\",\n    x = \"Desfolha (%)\",\n    y = \"Número médio de nós\",\n    color = \"Estádio\"\n  ) +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5))\n```\n\nGráfico dinâmico\n\n```{r}\n#| warning: false\n#| message: false\n\n# Gráfico base com ajustes de group\ngif <- ggplot(dados_summary, aes(x = defoliation, y = mean_nodes, color = stage, group = stage)) +\n  geom_line(aes(group = stage), size = 1) +\n  geom_point(aes(group = stage), size = 2) +\n  geom_errorbar(aes(ymin = mean_nodes - se_nodes, ymax = mean_nodes + se_nodes), width = 5) +\n  labs(\n    title = \"Número médio de nós por estádio e desfolha\",\n    x = \"Desfolha (%)\",\n    y = \"Número médio de nós\",\n    color = \"Estádio\"\n  ) +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5))\n\n# Animação com transition_reveal\ngif_nodes <- gif + transition_reveal(along = defoliation)\n\n# Animação com renderer gifski (mais estável)\nanimated_gif5 <- animate(gif_nodes, renderer = gifski_renderer())\nanimated_gif5\n\n# Salvar o GIF\nanim_save(\"imgs/gif_nodes.gif\", animation = animated_gif5)\n```\n\n### Gráfico de tendências individuais\n\n```{r}\n# Convertendo as variáveis categóricas\ndat$stage <- as.factor(dat$stage)\ndat$defoliation <- as.factor(dat$defoliation)\n\ndat_long <- dat |>\n  pivot_longer(cols = c(height, nodes, reproductive, bolls, weight),\n               names_to = \"variavel_resposta\", \n               values_to = \"valor\") #reorganizando os dados para formato longo\n\n# Gráfico: número de capulhos por nível de desfolha, colorido por estádio\nggplot(dat_long, aes(x = defoliation, y = valor)) +\n  geom_jitter(position = position_jitter(width = 0.1), size = 2, alpha = 0.8) +\n  \n  # Linha de tendência ligando as médias por estádio\n  stat_summary(fun = mean, geom = \"line\", aes(group = 1), color = \"red\", size = 0.75) +\n  \n  # Pontos de média\n  stat_summary(fun = mean, geom = \"point\", shape = 18, size = 4, color = \"red\") +\n  \n  labs(title = NULL,\n       x = \"Nível de desfolha\", y = NULL) +\n  \n  facet_grid(rows = vars(variavel_resposta), cols = vars(stage), scales = \"free_y\") +\n  theme_gray()\n```\n"},"formats":{"html":{"identifier":{"display-name":"HTML","target-format":"html","base-format":"html"},"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":true,"freeze":"auto","echo":true,"output":true,"warning":false,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"ipynb-shell-interactivity":null,"plotly-connected":true,"engine":"knitr"},"render":{"keep-tex":false,"keep-typ":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"wrap","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"inline-includes":false,"preserve-yaml":false,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-min-runs":1,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[],"notebook-links":true},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","toc":true,"output-file":"Projeto_FIP606.html"},"language":{"toc-title-document":"Table of contents","toc-title-website":"On this page","related-formats-title":"Other Formats","related-notebooks-title":"Notebooks","source-notebooks-prefix":"Source","other-links-title":"Other Links","code-links-title":"Code Links","launch-dev-container-title":"Launch Dev Container","launch-binder-title":"Launch Binder","article-notebook-label":"Article Notebook","notebook-preview-download":"Download Notebook","notebook-preview-download-src":"Download Source","notebook-preview-back":"Back to Article","manuscript-meca-bundle":"MECA Bundle","section-title-abstract":"Abstract","section-title-appendices":"Appendices","section-title-footnotes":"Footnotes","section-title-references":"References","section-title-reuse":"Reuse","section-title-copyright":"Copyright","section-title-citation":"Citation","appendix-attribution-cite-as":"For attribution, please cite this work as:","appendix-attribution-bibtex":"BibTeX citation:","appendix-view-license":"View License","title-block-author-single":"Author","title-block-author-plural":"Authors","title-block-affiliation-single":"Affiliation","title-block-affiliation-plural":"Affiliations","title-block-published":"Published","title-block-modified":"Modified","title-block-keywords":"Keywords","callout-tip-title":"Tip","callout-note-title":"Note","callout-warning-title":"Warning","callout-important-title":"Important","callout-caution-title":"Caution","code-summary":"Code","code-tools-menu-caption":"Code","code-tools-show-all-code":"Show All Code","code-tools-hide-all-code":"Hide All Code","code-tools-view-source":"View Source","code-tools-source-code":"Source Code","tools-share":"Share","tools-download":"Download","code-line":"Line","code-lines":"Lines","copy-button-tooltip":"Copy to Clipboard","copy-button-tooltip-success":"Copied!","repo-action-links-edit":"Edit this page","repo-action-links-source":"View source","repo-action-links-issue":"Report an issue","back-to-top":"Back to top","search-no-results-text":"No results","search-matching-documents-text":"matching documents","search-copy-link-title":"Copy link to search","search-hide-matches-text":"Hide additional matches","search-more-match-text":"more match in this document","search-more-matches-text":"more matches in this document","search-clear-button-title":"Clear","search-text-placeholder":"","search-detached-cancel-button-title":"Cancel","search-submit-button-title":"Submit","search-label":"Search","toggle-section":"Toggle section","toggle-sidebar":"Toggle sidebar navigation","toggle-dark-mode":"Toggle dark mode","toggle-reader-mode":"Toggle reader mode","toggle-navigation":"Toggle navigation","crossref-fig-title":"Figure","crossref-tbl-title":"Table","crossref-lst-title":"Listing","crossref-thm-title":"Theorem","crossref-lem-title":"Lemma","crossref-cor-title":"Corollary","crossref-prp-title":"Proposition","crossref-cnj-title":"Conjecture","crossref-def-title":"Definition","crossref-exm-title":"Example","crossref-exr-title":"Exercise","crossref-ch-prefix":"Chapter","crossref-apx-prefix":"Appendix","crossref-sec-prefix":"Section","crossref-eq-prefix":"Equation","crossref-lof-title":"List of Figures","crossref-lot-title":"List of Tables","crossref-lol-title":"List of Listings","environment-proof-title":"Proof","environment-remark-title":"Remark","environment-solution-title":"Solution","listing-page-order-by":"Order By","listing-page-order-by-default":"Default","listing-page-order-by-date-asc":"Oldest","listing-page-order-by-date-desc":"Newest","listing-page-order-by-number-desc":"High to Low","listing-page-order-by-number-asc":"Low to High","listing-page-field-date":"Date","listing-page-field-title":"Title","listing-page-field-description":"Description","listing-page-field-author":"Author","listing-page-field-filename":"File Name","listing-page-field-filemodified":"Modified","listing-page-field-subtitle":"Subtitle","listing-page-field-readingtime":"Reading Time","listing-page-field-wordcount":"Word Count","listing-page-field-categories":"Categories","listing-page-minutes-compact":"{0} min","listing-page-category-all":"All","listing-page-no-matches":"No matching items","listing-page-words":"{0} words","listing-page-filter":"Filter","draft":"Draft"},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.7.31","editor":"visual","fontsize":"1.1em","theme":{"light":"sandstone","dark":"darkly"},"code-copy":true,"title":"Análises exploratórias dos dados do experimento","author":"Antônia Karine Fernandes, José Neto Rodrigues e Vinícius Fonsêca"},"extensions":{"book":{"multiFile":true}}}},"projectFormats":["html"]}