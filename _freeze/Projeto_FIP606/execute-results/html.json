{
  "hash": "2cafd2e6b392d75f9fa0ebfe2bb6816a",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Análises exploratórias dos dados do experimento\"\nauthor: \"Antônia Karine Fernandes, José Neto Rodrigues e Vinícius Fonsêca\"\nformat: html\neditor: visual\n---\n\n# Pacotes usados\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(agridat) #pacote em que está armazendado o banco de dados que será utilizado\nlibrary(openxlsx) #salvando o banco de dados\nlibrary(DT) #cria tabelas interativas\nlibrary(tidyverse)\nlibrary(skimr)\nlibrary(dplyr)\nlibrary(tidyverse)\nlibrary(gganimate)\n```\n:::\n\n\n# Análises\n\n## Carregando do banco de dados\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata(silva.cotton)\ndat <- silva.cotton\nView(dat)\n\nwrite.xlsx(dat, file = \"dat.xlsx\")\n\ndatatable(dat) #Cria a tabela interativa no arquivo HTML\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-9ce2b898b17ac5fc70db\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-9ce2b898b17ac5fc70db\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\",\"21\",\"22\",\"23\",\"24\",\"25\",\"26\",\"27\",\"28\",\"29\",\"30\",\"31\",\"32\",\"33\",\"34\",\"35\",\"36\",\"37\",\"38\",\"39\",\"40\",\"41\",\"42\",\"43\",\"44\",\"45\",\"46\",\"47\",\"48\",\"49\",\"50\",\"51\",\"52\",\"53\",\"54\",\"55\",\"56\",\"57\",\"58\",\"59\",\"60\",\"61\",\"62\",\"63\",\"64\",\"65\",\"66\",\"67\",\"68\",\"69\",\"70\",\"71\",\"72\",\"73\",\"74\",\"75\",\"76\",\"77\",\"78\",\"79\",\"80\",\"81\",\"82\",\"83\",\"84\",\"85\",\"86\",\"87\",\"88\",\"89\",\"90\",\"91\",\"92\",\"93\",\"94\",\"95\",\"96\",\"97\",\"98\",\"99\",\"100\",\"101\",\"102\",\"103\",\"104\",\"105\",\"106\",\"107\",\"108\",\"109\",\"110\",\"111\",\"112\",\"113\",\"114\",\"115\",\"116\",\"117\",\"118\",\"119\",\"120\",\"121\",\"122\",\"123\",\"124\",\"125\",\"126\",\"127\",\"128\",\"129\",\"130\",\"131\",\"132\",\"133\",\"134\",\"135\",\"136\",\"137\",\"138\",\"139\",\"140\",\"141\",\"142\",\"143\",\"144\",\"145\",\"146\",\"147\",\"148\",\"149\",\"150\",\"151\",\"152\",\"153\",\"154\",\"155\",\"156\",\"157\",\"158\",\"159\",\"160\",\"161\",\"162\",\"163\",\"164\",\"165\",\"166\",\"167\",\"168\",\"169\",\"170\",\"171\",\"172\",\"173\",\"174\",\"175\",\"176\",\"177\",\"178\",\"179\",\"180\",\"181\",\"182\",\"183\",\"184\",\"185\",\"186\",\"187\",\"188\",\"189\",\"190\",\"191\",\"192\",\"193\",\"194\",\"195\",\"196\",\"197\",\"198\",\"199\",\"200\",\"201\",\"202\",\"203\",\"204\",\"205\",\"206\",\"207\",\"208\",\"209\",\"210\",\"211\",\"212\",\"213\",\"214\",\"215\",\"216\",\"217\",\"218\",\"219\",\"220\",\"221\",\"222\",\"223\",\"224\",\"225\",\"226\",\"227\",\"228\",\"229\",\"230\",\"231\",\"232\",\"233\",\"234\",\"235\",\"236\",\"237\",\"238\",\"239\",\"240\",\"241\",\"242\",\"243\",\"244\",\"245\",\"246\",\"247\",\"248\",\"249\",\"250\"],[\"vegetative\",\"vegetative\",\"vegetative\",\"vegetative\",\"vegetative\",\"vegetative\",\"vegetative\",\"vegetative\",\"vegetative\",\"vegetative\",\"vegetative\",\"vegetative\",\"vegetative\",\"vegetative\",\"vegetative\",\"vegetative\",\"vegetative\",\"vegetative\",\"vegetative\",\"vegetative\",\"vegetative\",\"vegetative\",\"vegetative\",\"vegetative\",\"vegetative\",\"flowerbud\",\"flowerbud\",\"flowerbud\",\"flowerbud\",\"flowerbud\",\"flowerbud\",\"flowerbud\",\"flowerbud\",\"flowerbud\",\"flowerbud\",\"flowerbud\",\"flowerbud\",\"flowerbud\",\"flowerbud\",\"flowerbud\",\"flowerbud\",\"flowerbud\",\"flowerbud\",\"flowerbud\",\"flowerbud\",\"flowerbud\",\"flowerbud\",\"flowerbud\",\"flowerbud\",\"flowerbud\",\"blossom\",\"blossom\",\"blossom\",\"blossom\",\"blossom\",\"blossom\",\"blossom\",\"blossom\",\"blossom\",\"blossom\",\"blossom\",\"blossom\",\"blossom\",\"blossom\",\"blossom\",\"blossom\",\"blossom\",\"blossom\",\"blossom\",\"blossom\",\"blossom\",\"blossom\",\"blossom\",\"blossom\",\"blossom\",\"boll\",\"boll\",\"boll\",\"boll\",\"boll\",\"boll\",\"boll\",\"boll\",\"boll\",\"boll\",\"boll\",\"boll\",\"boll\",\"boll\",\"boll\",\"boll\",\"boll\",\"boll\",\"boll\",\"boll\",\"boll\",\"boll\",\"boll\",\"boll\",\"boll\",\"bollopen\",\"bollopen\",\"bollopen\",\"bollopen\",\"bollopen\",\"bollopen\",\"bollopen\",\"bollopen\",\"bollopen\",\"bollopen\",\"bollopen\",\"bollopen\",\"bollopen\",\"bollopen\",\"bollopen\",\"bollopen\",\"bollopen\",\"bollopen\",\"bollopen\",\"bollopen\",\"bollopen\",\"bollopen\",\"bollopen\",\"bollopen\",\"bollopen\",\"vegetative\",\"vegetative\",\"vegetative\",\"vegetative\",\"vegetative\",\"vegetative\",\"vegetative\",\"vegetative\",\"vegetative\",\"vegetative\",\"vegetative\",\"vegetative\",\"vegetative\",\"vegetative\",\"vegetative\",\"vegetative\",\"vegetative\",\"vegetative\",\"vegetative\",\"vegetative\",\"vegetative\",\"vegetative\",\"vegetative\",\"vegetative\",\"vegetative\",\"flowerbud\",\"flowerbud\",\"flowerbud\",\"flowerbud\",\"flowerbud\",\"flowerbud\",\"flowerbud\",\"flowerbud\",\"flowerbud\",\"flowerbud\",\"flowerbud\",\"flowerbud\",\"flowerbud\",\"flowerbud\",\"flowerbud\",\"flowerbud\",\"flowerbud\",\"flowerbud\",\"flowerbud\",\"flowerbud\",\"flowerbud\",\"flowerbud\",\"flowerbud\",\"flowerbud\",\"flowerbud\",\"blossom\",\"blossom\",\"blossom\",\"blossom\",\"blossom\",\"blossom\",\"blossom\",\"blossom\",\"blossom\",\"blossom\",\"blossom\",\"blossom\",\"blossom\",\"blossom\",\"blossom\",\"blossom\",\"blossom\",\"blossom\",\"blossom\",\"blossom\",\"blossom\",\"blossom\",\"blossom\",\"blossom\",\"blossom\",\"boll\",\"boll\",\"boll\",\"boll\",\"boll\",\"boll\",\"boll\",\"boll\",\"boll\",\"boll\",\"boll\",\"boll\",\"boll\",\"boll\",\"boll\",\"boll\",\"boll\",\"boll\",\"boll\",\"boll\",\"boll\",\"boll\",\"boll\",\"boll\",\"boll\",\"bollopen\",\"bollopen\",\"bollopen\",\"bollopen\",\"bollopen\",\"bollopen\",\"bollopen\",\"bollopen\",\"bollopen\",\"bollopen\",\"bollopen\",\"bollopen\",\"bollopen\",\"bollopen\",\"bollopen\",\"bollopen\",\"bollopen\",\"bollopen\",\"bollopen\",\"bollopen\",\"bollopen\",\"bollopen\",\"bollopen\",\"bollopen\",\"bollopen\"],[0,0,0,0,0,25,25,25,25,25,50,50,50,50,50,75,75,75,75,75,100,100,100,100,100,0,0,0,0,0,25,25,25,25,25,50,50,50,50,50,75,75,75,75,75,100,100,100,100,100,0,0,0,0,0,25,25,25,25,25,50,50,50,50,50,75,75,75,75,75,100,100,100,100,100,0,0,0,0,0,25,25,25,25,25,50,50,50,50,50,75,75,75,75,75,100,100,100,100,100,0,0,0,0,0,25,25,25,25,25,50,50,50,50,50,75,75,75,75,75,100,100,100,100,100,0,0,0,0,0,25,25,25,25,25,50,50,50,50,50,75,75,75,75,75,100,100,100,100,100,0,0,0,0,0,25,25,25,25,25,50,50,50,50,50,75,75,75,75,75,100,100,100,100,100,0,0,0,0,0,25,25,25,25,25,50,50,50,50,50,75,75,75,75,75,100,100,100,100,100,0,0,0,0,0,25,25,25,25,25,50,50,50,50,50,75,75,75,75,75,100,100,100,100,100,0,0,0,0,0,25,25,25,25,25,50,50,50,50,50,75,75,75,75,75,100,100,100,100,100],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2],[\"R1\",\"R2\",\"R3\",\"R4\",\"R5\",\"R1\",\"R2\",\"R3\",\"R4\",\"R5\",\"R1\",\"R2\",\"R3\",\"R4\",\"R5\",\"R1\",\"R2\",\"R3\",\"R4\",\"R5\",\"R1\",\"R2\",\"R3\",\"R4\",\"R5\",\"R1\",\"R2\",\"R3\",\"R4\",\"R5\",\"R1\",\"R2\",\"R3\",\"R4\",\"R5\",\"R1\",\"R2\",\"R3\",\"R4\",\"R5\",\"R1\",\"R2\",\"R3\",\"R4\",\"R5\",\"R1\",\"R2\",\"R3\",\"R4\",\"R5\",\"R1\",\"R2\",\"R3\",\"R4\",\"R5\",\"R1\",\"R2\",\"R3\",\"R4\",\"R5\",\"R1\",\"R2\",\"R3\",\"R4\",\"R5\",\"R1\",\"R2\",\"R3\",\"R4\",\"R5\",\"R1\",\"R2\",\"R3\",\"R4\",\"R5\",\"R1\",\"R2\",\"R3\",\"R4\",\"R5\",\"R1\",\"R2\",\"R3\",\"R4\",\"R5\",\"R1\",\"R2\",\"R3\",\"R4\",\"R5\",\"R1\",\"R2\",\"R3\",\"R4\",\"R5\",\"R1\",\"R2\",\"R3\",\"R4\",\"R5\",\"R1\",\"R2\",\"R3\",\"R4\",\"R5\",\"R1\",\"R2\",\"R3\",\"R4\",\"R5\",\"R1\",\"R2\",\"R3\",\"R4\",\"R5\",\"R1\",\"R2\",\"R3\",\"R4\",\"R5\",\"R1\",\"R2\",\"R3\",\"R4\",\"R5\",\"R1\",\"R2\",\"R3\",\"R4\",\"R5\",\"R1\",\"R2\",\"R3\",\"R4\",\"R5\",\"R1\",\"R2\",\"R3\",\"R4\",\"R5\",\"R1\",\"R2\",\"R3\",\"R4\",\"R5\",\"R1\",\"R2\",\"R3\",\"R4\",\"R5\",\"R1\",\"R2\",\"R3\",\"R4\",\"R5\",\"R1\",\"R2\",\"R3\",\"R4\",\"R5\",\"R1\",\"R2\",\"R3\",\"R4\",\"R5\",\"R1\",\"R2\",\"R3\",\"R4\",\"R5\",\"R1\",\"R2\",\"R3\",\"R4\",\"R5\",\"R1\",\"R2\",\"R3\",\"R4\",\"R5\",\"R1\",\"R2\",\"R3\",\"R4\",\"R5\",\"R1\",\"R2\",\"R3\",\"R4\",\"R5\",\"R1\",\"R2\",\"R3\",\"R4\",\"R5\",\"R1\",\"R2\",\"R3\",\"R4\",\"R5\",\"R1\",\"R2\",\"R3\",\"R4\",\"R5\",\"R1\",\"R2\",\"R3\",\"R4\",\"R5\",\"R1\",\"R2\",\"R3\",\"R4\",\"R5\",\"R1\",\"R2\",\"R3\",\"R4\",\"R5\",\"R1\",\"R2\",\"R3\",\"R4\",\"R5\",\"R1\",\"R2\",\"R3\",\"R4\",\"R5\",\"R1\",\"R2\",\"R3\",\"R4\",\"R5\",\"R1\",\"R2\",\"R3\",\"R4\",\"R5\",\"R1\",\"R2\",\"R3\",\"R4\",\"R5\",\"R1\",\"R2\",\"R3\",\"R4\",\"R5\"],[5,4,4,6,5,5,5,6,5,5,4,4,5,4,5,5,3,3,5,4,5,2,2,5,2,4,4,4,5,5,5,6,4,5,4,4,4,5,5,4,6,5,4,3,2,5,5,3,3,5,4,4,5,6,5,4,4,3,4,4,4,4,4,3,4,4,4,3,3,3,4,4,4,3,4,5,5,5,4,5,4,4,2,5,3,4,4,5,4,5,4,4,3,3,4,5,4,1,2,2,6,4,4,6,5,4,5,5,6,4,4,2,3,4,5,3,6,5,3,5,5,4,5,5,6,5,5,4,3,5,6,4,5,5,5,4,4,5,4,4,4,4,5,4,5,3,4,4,1,4,3,4,4,4,5,4,6,3,5,5,5,5,4,5,4,6,5,3,5,6,4,3,4,3,4,6,5,3,7,3,3,3,5,3,1,4,3,3,2,4,4,2,4,3,4,1,3,2,3,1,3,5,2,4,5,5,4,4,3,4,5,3,5,4,4,4,3,3,3,3,2,2,4,4,1,5,3,5,6,6,5,8,3,4,6,5,5,5,5,4,5,2,5,5,5,4,4,5,3,4],[5,4,4,5,5,5,5,5,5,5,4,4,5,4,5,5,3,2,4,4,5,2,2,5,2,4,4,4,5,5,5,6,4,5,4,4,4,5,5,4,5,5,4,3,2,4,4,3,3,5,4,4,5,6,5,4,2,2,4,4,2,2,4,3,4,4,3,3,3,2,4,2,3,3,4,5,5,5,4,5,4,4,2,5,2,4,4,5,4,5,2,4,3,3,4,2,1,1,2,2,6,4,4,6,5,4,5,5,6,4,4,2,3,4,5,3,6,5,3,5,5,4,5,5,6,5,5,4,3,5,6,4,5,5,5,4,4,5,4,4,4,4,5,4,5,3,4,4,0,4,3,4,4,4,5,4,6,3,5,5,4,5,4,5,4,6,5,3,5,6,3,3,4,4,3,6,5,3,6,3,3,3,3,3,1,4,3,3,1,3,4,2,4,3,2,1,3,1,1,1,3,5,2,4,5,5,2,4,3,4,5,3,6,4,4,4,2,3,3,3,1,2,1,2,1,5,3,5,6,6,5,8,3,4,6,5,5,4,5,4,5,2,5,5,5,4,4,5,3,4],[73,63,65.5,85,72,77,74,59,81,75,70.5,79.5,65,75,65.5,65,79,75.5,73,72,71,78,71.5,80,73.5,74,74,70,75,63,64.5,79.5,66,72,70,63,74,69,64,63,74.5,74,70,75,57,74,87,82,71,78,60,78.5,76,61,63,59,72,55.5,69,66,73,67,63,71,74.5,60,43,59,59,66,68,73,80,86,63,62.5,62,75,65.5,61,67,72,62,71,62,58,66,59,71,73,52.5,72,63,58,55.5,51,82,65.5,67,53.5,74.5,68,69.5,66.5,66,74,58.5,68,72,55,73,67,74.5,72.5,74.5,52,61,61,64,70,80,78,69,71,71,78,82.5,74,70,77.5,79.5,79.5,68,87.5,77.5,76,77.5,68,81,75,75,81.5,80,69.5,77.5,74,83,78,69,81.5,79,75,66,69,57,86,69,67,65,73,74,67.5,72,61.5,73,76,82,52,72.5,72.5,69,88,82,76,79,63.5,63,62,68,63,92,65,66.5,63,62,66,73,60.5,75,68,67,78.5,71,56.5,74,60,79,75,75,80.5,65,68.5,58,67,66,70,60,68,51,68,57,57,68,51,60.5,65,61,49,61,54.5,75,56.5,73.5,66,57.5,62.5,69.5,69,61.5,64,75,84,73,51,57,70,70.5,73,76.5,60,60,72,74,66.5,78,71,62,71,74.5,71],[16,17,14,15,15,15,17,10,14,13,13,16,13,15,12,13,17,13,14,12,13,19,14,17,15,13,14,14,15,12,12,16,14,15,17,14,15,15,14,15,15,16,16,17,16,16,17,17,18,16,15,15,17,14,15,15,18,18,15,17,13,17,15,18,20,15,10,15,16,18,15,18,17,17,14,13,13,16,12,13,14,15,15,14,15,14,14,14,14,15,14,17,15,16,15,19,17,17,17,18,15,15,11,14,13,14,11,13,15,14,13,14,16,12,14,12,15,14,13,14,16,16,14,15,16,16,12,15,12,13,15,16,13,15,13,14,14,15,15,13,15,16,14,14,14,14,16,15,16,14,14,14,12,13,13,16,14,15,15,16,16,17,15,15,15,16,17,15,17,14,14,17,17,16,14,15,11,14,14,16,17,14,17,16,14,17,17,16,15,15,15,17,16,15,20,14,20,18,17,16,14,13,16,13,13,15,15,14,14,15,15,13,15,15,15,16,14,15,16,15,16,15,18,17,19,14,14,15,13,11,13,16,17,10,14,16,14,15,14,14,16,15,16,11,15,15,13,14,16,15],[33.16,28.675,31.485,28.925,36.43,34.105,30.01,37.338,27.93,29.32,25.228,26.205,33.327,26.75,33.2,30.18,27.306,27.277,28.305,32.03,24.323,20.875,20.755,16.235,22.2,24.4,30.015,27.98,32.437,30.845,28.815,31.547,26.453,29.775,27.7,30.389,26.957,29.975,35.43,25.093,34.501,26.86,20.5,26.071,24.929,23.015,25.007,21.706,22.449,24.024,27.681,30.51,29.555,32.825,23.2,26.58,15.6,19.26,26.174,18.06,23.666,16.491,23.31,14.59,25.425,27.928,15.475,23.314,20.62,13.99,16.851,8.522,9.686,14.556,17.435,28.103,28.9,25.46,27.69,34.75,30.678,30.36,23.33,19.581,28.655,27.991,26.994,30.878,28.358,29.39,20.312,22.56,23.81,20.754,22.23,8.75,4.735,5.56,9.055,5.535,34.14,28.777,36.58,38.32,33.1,29.128,34.105,28.87,29.76,33.763,29.122,25.97,25.735,29.93,31.51,29.46,25.255,32.48,26.82,28.74,22.46,25.75,30.76,22.2,25.575,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>stage<\\/th>\\n      <th>defoliation<\\/th>\\n      <th>plant<\\/th>\\n      <th>rep<\\/th>\\n      <th>reproductive<\\/th>\\n      <th>bolls<\\/th>\\n      <th>height<\\/th>\\n      <th>nodes<\\/th>\\n      <th>weight<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[2,3,5,6,7,8,9]},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"stage\",\"targets\":1},{\"name\":\"defoliation\",\"targets\":2},{\"name\":\"plant\",\"targets\":3},{\"name\":\"rep\",\"targets\":4},{\"name\":\"reproductive\",\"targets\":5},{\"name\":\"bolls\",\"targets\":6},{\"name\":\"height\",\"targets\":7},{\"name\":\"nodes\",\"targets\":8},{\"name\":\"weight\",\"targets\":9}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n## Análises exploratórias\n\n### Estrutura geral dos dados\n\nVisualização geral da estrutura dos dados\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(dat)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n'data.frame':\t250 obs. of  9 variables:\n $ stage       : Factor w/ 5 levels \"blossom\",\"boll\",..: 5 5 5 5 5 5 5 5 5 5 ...\n $ defoliation : int  0 0 0 0 0 25 25 25 25 25 ...\n $ plant       : int  1 1 1 1 1 1 1 1 1 1 ...\n $ rep         : Factor w/ 5 levels \"R1\",\"R2\",\"R3\",..: 1 2 3 4 5 1 2 3 4 5 ...\n $ reproductive: int  5 4 4 6 5 5 5 6 5 5 ...\n $ bolls       : int  5 4 4 5 5 5 5 5 5 5 ...\n $ height      : num  73 63 65.5 85 72 77 74 59 81 75 ...\n $ nodes       : int  16 17 14 15 15 15 17 10 14 13 ...\n $ weight      : num  33.2 28.7 31.5 28.9 36.4 ...\n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(dat)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n        stage     defoliation      plant     rep      reproductive  \n blossom   :50   Min.   :  0   Min.   :1.0   R1:50   Min.   :1.000  \n boll      :50   1st Qu.: 25   1st Qu.:1.0   R2:50   1st Qu.:3.000  \n bollopen  :50   Median : 50   Median :1.5   R3:50   Median :4.000  \n flowerbud :50   Mean   : 50   Mean   :1.5   R4:50   Mean   :4.112  \n vegetative:50   3rd Qu.: 75   3rd Qu.:2.0   R5:50   3rd Qu.:5.000  \n                 Max.   :100   Max.   :2.0           Max.   :8.000  \n                                                                    \n     bolls           height          nodes           weight      \n Min.   :0.000   Min.   :43.00   Min.   :10.00   Min.   : 4.735  \n 1st Qu.:3.000   1st Qu.:63.00   1st Qu.:14.00   1st Qu.:22.560  \n Median :4.000   Median :70.00   Median :15.00   Median :26.994  \n Mean   :3.912   Mean   :69.22   Mean   :14.91   Mean   :25.780  \n 3rd Qu.:5.000   3rd Qu.:74.88   3rd Qu.:16.00   3rd Qu.:30.010  \n Max.   :8.000   Max.   :92.00   Max.   :20.00   Max.   :38.320  \n                                                 NA's   :125     \n```\n\n\n:::\n\n```{.r .cell-code}\nskimr::skim(dat)\n```\n\n::: {.cell-output-display}\n\nTable: Data summary\n\n|                         |     |\n|:------------------------|:----|\n|Name                     |dat  |\n|Number of rows           |250  |\n|Number of columns        |9    |\n|_______________________  |     |\n|Column type frequency:   |     |\n|factor                   |2    |\n|numeric                  |7    |\n|________________________ |     |\n|Group variables          |None |\n\n\n**Variable type: factor**\n\n|skim_variable | n_missing| complete_rate|ordered | n_unique|top_counts                         |\n|:-------------|---------:|-------------:|:-------|--------:|:----------------------------------|\n|stage         |         0|             1|FALSE   |        5|blo: 50, bol: 50, bol: 50, flo: 50 |\n|rep           |         0|             1|FALSE   |        5|R1: 50, R2: 50, R3: 50, R4: 50     |\n\n\n**Variable type: numeric**\n\n|skim_variable | n_missing| complete_rate|  mean|    sd|    p0|   p25|   p50|   p75|   p100|hist  |\n|:-------------|---------:|-------------:|-----:|-----:|-----:|-----:|-----:|-----:|------:|:-----|\n|defoliation   |         0|           1.0| 50.00| 35.43|  0.00| 25.00| 50.00| 75.00| 100.00|▇▇▇▇▇ |\n|plant         |         0|           1.0|  1.50|  0.50|  1.00|  1.00|  1.50|  2.00|   2.00|▇▁▁▁▇ |\n|reproductive  |         0|           1.0|  4.11|  1.15|  1.00|  3.00|  4.00|  5.00|   8.00|▁▂▇▁▁ |\n|bolls         |         0|           1.0|  3.91|  1.29|  0.00|  3.00|  4.00|  5.00|   8.00|▁▆▇▇▁ |\n|height        |         0|           1.0| 69.22|  8.28| 43.00| 63.00| 70.00| 74.88|  92.00|▁▃▇▇▁ |\n|nodes         |         0|           1.0| 14.91|  1.76| 10.00| 14.00| 15.00| 16.00|  20.00|▂▆▇▃▁ |\n|weight        |       125|           0.5| 25.78|  6.83|  4.74| 22.56| 26.99| 30.01|  38.32|▁▁▃▇▂ |\n\n\n:::\n:::\n\n\n### Histograma de frequências\n\nUsaremos o pacote *tidyverse* (que inclui o *ggplot2*) para visualização de cada variável resposta por meio dos histogramas de frequência\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat_long <- dat |> \n  pivot_longer(cols = c(height, nodes, reproductive, bolls, weight),\n               names_to = \"variavel_resposta\",\n               values_to = \"valor\") #reorganizando os dados para formato longo\n\n# Histogramas + densidade\nggplot(dat_long, aes(x = valor)) +\n  geom_histogram(aes(y = ..density..), bins = 30, fill = \"lightblue\", color = \"gray30\") +\n  geom_density(color = \"red\") +\n  facet_wrap(~variavel_resposta, scales = \"free\", ncol = 2) +\n  theme_minimal() +\n  labs(title = \"Distribuição das variáveis resposta\", x = NULL, y = \"Densidade\")\n```\n\n::: {.cell-output-display}\n![](Projeto_FIP606_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n### Gráficos BoxPlot\n\nEm seguida, construimos gráficos do tipo boxplot para entender como a desfolha afeta cada variável. As variáveis resposta estarão em função da desfolha, facetando por estágio de desenvolvimento.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat |> \n  ggplot(aes(x = as.factor(defoliation), y = height)) +\n  geom_boxplot(outlier.colour = NA) + \n  geom_jitter(width = 0.1, color = \"gray20\") +\n  theme_grey() + \n  labs(x = \"Defoliation\",\n       y = \"Plant height\") +\n  facet_wrap(~ stage)\n```\n\n::: {.cell-output-display}\n![](Projeto_FIP606_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n:::\n\n\nPercebemos que, ao invés de criar um gráfico para cada variável resposta, é mais viável criarmos um gráfico em que cada linha representa uma variável resposta, e cada coluna representa um estágio de desenvolvimento\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndat_long <- dat |> \n  pivot_longer(cols = c(height, nodes, reproductive, bolls, weight),\n               names_to = \"variavel_resposta\",\n               values_to = \"valor\") #reorganizando os dados para formato longo\n\n# Gráfico boxplot\ndat_long |> \n  ggplot(aes(x = as.factor(defoliation), y = valor)) +\n  geom_boxplot(outlier.colour = NA) +\n  geom_jitter(width = 0.1, color = \"gray20\", alpha = 0.6) +\n  theme_grey() +\n  labs(x = \"Defoliation\", y = NULL) +\n  facet_grid(rows = vars(variavel_resposta), cols = vars(stage), scales = \"free_y\") +\n  theme(strip.text = element_text(face = \"bold\"))\n```\n\n::: {.cell-output-display}\n![](Projeto_FIP606_files/figure-html/unnamed-chunk-6-1.png){width=672}\n:::\n:::\n\n\n### Linhas de tendência\n\nAgora, plotaremos os gráficos de linhas para cada variável análisada para verificar a tendência dos dados.\n\nPeso médio das maçãs\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Filtrar apenas linhas com valores válidos de 'weight'\ndados_validos <- dat %>%\n  filter(!is.na(weight)) \n\n#head(dados_validos)\n#str(dados_validos)\n#colnames(dados_validos)\ndados_validos %>%\n  group_by(stage, defoliation)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 125 × 9\n# Groups:   stage, defoliation [25]\n   stage      defoliation plant rep   reproductive bolls height nodes weight\n   <fct>            <int> <int> <fct>        <int> <int>  <dbl> <int>  <dbl>\n 1 vegetative           0     1 R1               5     5   73      16   33.2\n 2 vegetative           0     1 R2               4     4   63      17   28.7\n 3 vegetative           0     1 R3               4     4   65.5    14   31.5\n 4 vegetative           0     1 R4               6     5   85      15   28.9\n 5 vegetative           0     1 R5               5     5   72      15   36.4\n 6 vegetative          25     1 R1               5     5   77      15   34.1\n 7 vegetative          25     1 R2               5     5   74      17   30.0\n 8 vegetative          25     1 R3               6     5   59      10   37.3\n 9 vegetative          25     1 R4               5     5   81      14   27.9\n10 vegetative          25     1 R5               5     5   75      13   29.3\n# ℹ 115 more rows\n```\n\n\n:::\n\n```{.r .cell-code}\n# Calcular média e erro padrão por stage x defoliation\ndados_summary2 <- dados_validos %>%\n  group_by(stage, defoliation) %>%\n  summarise(\n    mean_weight = mean(weight, na.rm = TRUE),\n    sd_weight = sd(weight, na.rm = TRUE),\n    n = n(),\n    se_weight = sd_weight / sqrt(n)\n  ) %>%\n  ungroup()\n\n# Garantir que defoliation é numérico (caso tenha vindo como string)\ndados_summary2$defoliation <- as.numeric(as.character(dados_summary2$defoliation))\n\n# Plotar o gráfico\nggplot(dados_summary2, aes(x = defoliation, y = mean_weight, color = stage, group = stage)) +\n  geom_line(size = 1) +\n  geom_point(size = 2) +\n  geom_errorbar(aes(ymin = mean_weight - se_weight, ymax = mean_weight + se_weight), width = 5) +\n  labs(\n    title = \"Peso médio das estruturas reprodutivas por estádio e desfolha\",\n    x = \"Desfolha (%)\",\n    y = \"Peso médio (g)\",\n    color = \"Estádio\"\n  ) +\n  theme_gray() +\n  theme(plot.title = element_text(hjust = 0.5))\n```\n\n::: {.cell-output-display}\n![](Projeto_FIP606_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\nGráfico dinâmico\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Gráfico base com ajustes de group\ngif <- ggplot(dados_summary2, aes(x = defoliation, y = mean_weight, color = stage, group = stage)) +\n  geom_line(aes(group = stage), size = 1) +\n  geom_point(aes(group = stage), size = 2) +\n  geom_errorbar(aes(ymin = mean_weight - se_weight, ymax = mean_weight + se_weight), width = 5) +\n  labs(\n    title = \"Peso médio das estruturas reprodutivas por estádio e desfolha\",\n    x = \"Desfolha (%)\",\n    y = \"Peso médio (g)\",\n    color = \"Estádio\"\n  ) +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5))\n\n# Animação com transition_reveal\ngif_sev <- gif + transition_reveal(along = defoliation)\n\n# Animação com renderer gifski (mais estável)\nanimated_gif <- animate(gif_sev, renderer = gifski_renderer())\nanimated_gif\n```\n\n::: {.cell-output-display}\n![](Projeto_FIP606_files/figure-html/unnamed-chunk-8-1.gif)\n:::\n\n```{.r .cell-code}\n# Salvar o GIF\nanim_save(\"imgs/gif_sev.gif\", animation = animated_gif)\n```\n:::\n\n\nNúmero de estruturas reprodutivas\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calcular média e erro padrão por stage x defoliation para 'reproductive'\ndados_summary <- dat %>%\n  group_by(stage, defoliation) %>%\n  summarise(\n    mean_reproductive = mean(reproductive),\n    sd_reproductive = sd(reproductive),\n    n = n(),\n    se_reproductive = sd_reproductive / sqrt(n)\n  ) %>%\n  ungroup()\n\n# Garantir que defoliation é numérico (caso venha como fator/character)\ndados_summary$defoliation <- as.numeric(as.character(dados_summary$defoliation))\n\n# Plotar gráfico para 'reproductive'\nggplot(dados_summary, aes(x = defoliation, y = mean_reproductive, color = stage, group = stage)) +\n  geom_line(size = 1) +\n  geom_point(size = 2) +\n  geom_errorbar(aes(ymin = mean_reproductive - se_reproductive, ymax = mean_reproductive + se_reproductive), width = 5) +\n  labs(\n    title = \"Número médio de estruturas reprodutivas por estádio e desfolha\",\n    x = \"Desfolha (%)\",\n    y = \"Número médio de estruturas reprodutivas\",\n    color = \"Estádio\"\n  ) +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5))\n```\n\n::: {.cell-output-display}\n![](Projeto_FIP606_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\nGráfico dinâmico\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Gráfico base com ajustes de group\ngif <- ggplot(dados_summary, aes(x = defoliation, y = mean_reproductive, color = stage, group = stage)) +\n  geom_line(aes(group = stage), size = 1) +\n  geom_point(aes(group = stage), size = 2) +\n  geom_errorbar(aes(ymin = mean_reproductive - se_reproductive, ymax = mean_reproductive + se_reproductive), width = 5) +\n  labs(\n    title = \"Número médio de estruturas reprodutivas por estádio e desfolha\",\n    x = \"Desfolha (%)\",\n    y = \"Número médio de estruturas reprodutivas\",\n    color = \"Estádio\"\n  ) +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5))\n\n# Animação com transition_reveal\ngif_rep <- gif + transition_reveal(along = defoliation)\n\n# Animação com renderer gifski (mais estável)\nanimated_gif2 <- animate(gif_rep, renderer = gifski_renderer())\nanimated_gif2\n```\n\n::: {.cell-output-display}\n![](Projeto_FIP606_files/figure-html/unnamed-chunk-10-1.gif)\n:::\n\n```{.r .cell-code}\n# Salvar o GIF\nanim_save(\"imgs/gif_rep.gif\", animation = animated_gif2)\n```\n:::\n\n\nNúmero de maçãs\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calcular média e erro padrão por stage x defoliation para 'bolls'\ndados_summary <- dat %>%\n  group_by(stage, defoliation) %>%\n  summarise(\n    mean_bolls = mean(bolls),\n    sd_bolls = sd(bolls),\n    n = n(),\n    se_bolls = sd_bolls / sqrt(n)\n  ) %>%\n  ungroup()\n\n# Garantir que defoliation é numérico (caso venha como fator/character)\ndados_summary$defoliation <- as.numeric(as.character(dados_summary$defoliation))\n\n# Plotar gráfico para 'bolls'\nggplot(dados_summary, aes(x = defoliation, y = mean_bolls, color = stage, group = stage)) +\n  geom_line(size = 1) +\n  geom_point(size = 2) +\n  geom_errorbar(aes(ymin = mean_bolls - se_bolls, ymax = mean_bolls + se_bolls), width = 5) +\n  labs(\n    title = \"Número médio de maçãs por estádio e desfolha\",\n    x = \"Desfolha (%)\",\n    y = \"Número médio de maçãs\",\n    color = \"Estádio\"\n  ) +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5))\n```\n\n::: {.cell-output-display}\n![](Projeto_FIP606_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\nGráfico dinâmico\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Gráfico base com ajustes de group\ngif <- ggplot(dados_summary, aes(x = defoliation, y = mean_bolls, color = stage, group = stage)) +\n  geom_line(aes(group = stage), size = 1) +\n  geom_point(aes(group = stage), size = 2) +\n  geom_errorbar(aes(ymin = mean_bolls - se_bolls, ymax = mean_bolls + se_bolls), width = 5) +\n  labs(\n    title = \"Número médio de maçãs por estádio e desfolha\",\n    x = \"Desfolha (%)\",\n    y = \"Número médio de maçãs\",\n    color = \"Estádio\"\n  ) +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5))\n\n# Animação com transition_reveal\ngif_bolls <- gif + transition_reveal(along = defoliation)\n\n# Animação com renderer gifski (mais estável)\nanimated_gif3 <- animate(gif_bolls, renderer = gifski_renderer())\nanimated_gif3\n```\n\n::: {.cell-output-display}\n![](Projeto_FIP606_files/figure-html/unnamed-chunk-12-1.gif)\n:::\n\n```{.r .cell-code}\n# Salvar o GIF\nanim_save(\"imgs/gif_bolls.gif\", animation = animated_gif3)\n```\n:::\n\n\nAltura da planta\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calcular média e erro padrão por stage x defoliation para 'height'\ndados_summary <- dat %>%\n  group_by(stage, defoliation) %>%\n  summarise(\n    mean_height = mean(height),\n    sd_height = sd(height),\n    n = n(),\n    se_height = sd_height / sqrt(n)\n  ) %>%\n  ungroup()\n\n# Garantir que defoliation é numérico (caso venha como fator/character)\ndados_summary$defoliation <- as.numeric(as.character(dados_summary$defoliation))\n\n# Plotar gráfico para 'height'\nggplot(dados_summary, aes(x = defoliation, y = mean_height, color = stage, group = stage)) +\n  geom_line(size = 1) +\n  geom_point(size = 2) +\n  geom_errorbar(aes(ymin = mean_height - se_height, ymax = mean_height + se_height), width = 5) +\n  labs(\n    title = \"Altura média das plantas por estádio e desfolha\",\n    x = \"Desfolha (%)\",\n    y = \"Altura média (cm)\",\n    color = \"Estádio\"\n  ) +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5))\n```\n\n::: {.cell-output-display}\n![](Projeto_FIP606_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\nGráfico dinâmico\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Gráfico base com ajustes de group\ngif <- ggplot(dados_summary, aes(x = defoliation, y = mean_height, color = stage, group = stage)) +\n  geom_line(aes(group = stage), size = 1) +\n  geom_point(aes(group = stage), size = 2) +\n  geom_errorbar(aes(ymin = mean_height - se_height, ymax = mean_height + se_height), width = 5) +\n  labs(\n    title = \"Altura média das plantas por estádio e desfolha\",\n    x = \"Desfolha (%)\",\n    y = \"Altura média (cm)\",\n    color = \"Estádio\"\n  ) +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5))\n\n# Animação com transition_reveal\ngif_hei <- gif + transition_reveal(along = defoliation)\n\n# Animação com renderer gifski (mais estável)\nanimated_gif4 <- animate(gif_hei, renderer = gifski_renderer())\nanimated_gif4\n```\n\n::: {.cell-output-display}\n![](Projeto_FIP606_files/figure-html/unnamed-chunk-14-1.gif)\n:::\n\n```{.r .cell-code}\n# Salvar o GIF\nanim_save(\"imgs/gif_height.gif\", animation = animated_gif4)\n```\n:::\n\n\nNúmero de nós\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Calcular média e erro padrão por stage x defoliation para 'nodes'\ndados_summary <- dat %>%\n  group_by(stage, defoliation) %>%\n  summarise(\n    mean_nodes = mean(nodes),\n    sd_nodes = sd(nodes),\n    n = n(),\n    se_nodes = sd_nodes / sqrt(n)\n  ) %>%\n  ungroup()\n\n# Garantir que defoliation é numérico (caso venha como fator/character)\ndados_summary$defoliation <- as.numeric(as.character(dados_summary$defoliation))\n\n# Plotar gráfico para 'nodes'\nggplot(dados_summary, aes(x = defoliation, y = mean_nodes, color = stage, group = stage)) +\n  geom_line(size = 1) +\n  geom_point(size = 2) +\n  geom_errorbar(aes(ymin = mean_nodes - se_nodes, ymax = mean_nodes + se_nodes), width = 5) +\n  labs(\n    title = \"Número médio de nós por estádio e desfolha\",\n    x = \"Desfolha (%)\",\n    y = \"Número médio de nós\",\n    color = \"Estádio\"\n  ) +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5))\n```\n\n::: {.cell-output-display}\n![](Projeto_FIP606_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n\nGráfico dinâmico\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Gráfico base com ajustes de group\ngif <- ggplot(dados_summary, aes(x = defoliation, y = mean_nodes, color = stage, group = stage)) +\n  geom_line(aes(group = stage), size = 1) +\n  geom_point(aes(group = stage), size = 2) +\n  geom_errorbar(aes(ymin = mean_nodes - se_nodes, ymax = mean_nodes + se_nodes), width = 5) +\n  labs(\n    title = \"Número médio de nós por estádio e desfolha\",\n    x = \"Desfolha (%)\",\n    y = \"Número médio de nós\",\n    color = \"Estádio\"\n  ) +\n  theme_minimal() +\n  theme(plot.title = element_text(hjust = 0.5))\n\n# Animação com transition_reveal\ngif_nodes <- gif + transition_reveal(along = defoliation)\n\n# Animação com renderer gifski (mais estável)\nanimated_gif5 <- animate(gif_nodes, renderer = gifski_renderer())\nanimated_gif5\n```\n\n::: {.cell-output-display}\n![](Projeto_FIP606_files/figure-html/unnamed-chunk-16-1.gif)\n:::\n\n```{.r .cell-code}\n# Salvar o GIF\nanim_save(\"imgs/gif_nodes.gif\", animation = animated_gif5)\n```\n:::\n\n\n### Gráfico de tendências individuais\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Convertendo as variáveis categóricas\ndat$stage <- as.factor(dat$stage)\ndat$defoliation <- as.factor(dat$defoliation)\n\ndat_long <- dat |>\n  pivot_longer(cols = c(height, nodes, reproductive, bolls, weight),\n               names_to = \"variavel_resposta\", \n               values_to = \"valor\") #reorganizando os dados para formato longo\n\n# Gráfico: número de capulhos por nível de desfolha, colorido por estádio\nggplot(dat_long, aes(x = defoliation, y = valor)) +\n  geom_jitter(position = position_jitter(width = 0.1), size = 2, alpha = 0.8) +\n  \n  # Linha de tendência ligando as médias por estádio\n  stat_summary(fun = mean, geom = \"line\", aes(group = 1), color = \"red\", size = 0.75) +\n  \n  # Pontos de média\n  stat_summary(fun = mean, geom = \"point\", shape = 18, size = 4, color = \"red\") +\n  \n  labs(title = NULL,\n       x = \"Nível de desfolha\", y = NULL) +\n  \n  facet_grid(rows = vars(variavel_resposta), cols = vars(stage), scales = \"free_y\") +\n  theme_gray()\n```\n\n::: {.cell-output-display}\n![](Projeto_FIP606_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<link href=\"site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/datatables-binding-0.33/datatables.js\"></script>\n<script src=\"site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"site_libs/dt-core-1.13.6/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\n<link href=\"site_libs/dt-core-1.13.6/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/dt-core-1.13.6/js/jquery.dataTables.min.js\"></script>\n<link href=\"site_libs/crosstalk-1.2.1/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"site_libs/crosstalk-1.2.1/js/crosstalk.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}